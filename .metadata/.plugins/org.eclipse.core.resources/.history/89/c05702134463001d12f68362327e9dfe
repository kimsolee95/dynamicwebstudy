package dynamicwebpractice.test.openapi.common;

import java.util.List;

import dynamicwebpractice.test.openapi.dto.Row;

public class CalculateDistance {
	
	//거리 계산
	private Double getDistance(Double lat, Double lnt, Double lat2, Double lnt2) {
	    double theta = lnt - lnt2;
	    double dist = Math.sin(deg2rad(lat))* Math.sin(deg2rad(lat2)) + Math.cos(deg2rad(lat))*Math.cos(deg2rad(lat2))*Math.cos(deg2rad(theta));
	    dist = Math.acos(dist);
	    dist = rad2deg(dist);
	    dist = dist * 60*1.1515*1609.344;

	    return dist / 1000;
	}
	
	
	//거리 계산 2
	private void getDistance(Double lat, Double lnt, List<Row> wifiInfolist) {
//	    double theta = lnt - lnt2;
//	    double dist = Math.sin(deg2rad(lat))* Math.sin(deg2rad(lat2)) + Math.cos(deg2rad(lat))*Math.cos(deg2rad(lat2))*Math.cos(deg2rad(theta));
//	    dist = Math.acos(dist);
//	    dist = rad2deg(dist);
//	    dist = dist * 60*1.1515*1609.344;
//
//	    return dist / 1000;
		
		for (int i=0; i<wifiInfolist.size(); i++) {
			
			double lnt2 = Double.parseDouble(wifiInfolist.get(i).getLnt());
			double lat2 = Double.parseDouble(wifiInfolist.get(i).getLat());
			
		    double theta = lnt - lnt2;
		    double dist = Math.sin(deg2rad(lat))* Math.sin(deg2rad(lat2)) + Math.cos(deg2rad(lat))*Math.cos(deg2rad(lat2))*Math.cos(deg2rad(theta));
		    dist = Math.acos(dist);
		    dist = rad2deg(dist);
		    dist = dist * 60*1.1515*1609.344;
			
		    wifiInfolist.get(i).setDistance(dist / 1000);
		}
	
	}
	
	//10진수를 radian(라디안)으로 변환
	private static double deg2rad(double deg){
	    return (deg * Math.PI/180.0);
	}
	
	//radian(라디안)을 10진수로 변환
	private static double rad2deg(double rad){
	    return (rad * 180 / Math.PI);
	}

}
